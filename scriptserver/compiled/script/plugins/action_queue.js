"use strict";
const plugin = {
    tickrate: 12,
    name: 'action-queue',
    description: 'give the script a list of things it has todo',
    requires: ['buildings', 'build', 'building-queue'],
    pre: async function (hack, storage, requires) {
        await hack.gotoScreen("main");
        let builds;
        await requires['buildings'].run(hack, {
            get: (_key, def) => def,
            set: (_key, val) => builds = val
        });
        await storage.set('buildings', builds.data);
    },
    pluginSetup: {
        hasPage: true,
        hasWidget: true,
        hasTicks: true
    },
    page: `<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous"> <style> #success { background-color: lightgreen; color: darkgreen; } .title { margin-top: 25px; font-size: 1.6em; font-weight: bold; font-family: sans-serif; } </style> <div class="content"> <h2>Action Queue</h2> <div id="success"></div> <div class="actions"> Nächste aktion: <span id="next">?</span> <button id="force">Check erzwingen</button> </div> Maximale Check Differenz <input type="text" id="max-diff"> <button id="set-max-diff">Setzen</button> <div class="title">Warteschlange</div> <table> <thead> <tr> <th>Swap</th> <th>Bild</th> <th>Was</th> <th>Del</th> </tr> </thead> <tbody id="queue"></tbody> </table> <div class="title">Gebäude</div> <table> <thead> <tr> <th>Bild</th> <th>Name</th> <th>Stufe</th> <th>Verbessern</th> </tr> </thead> <tbody id="buildings"></tbody> </table> </div>`,
    pageControl: {
pauseTicks: false,
server: function(e,t,i,u){let a;t(async e=>{let t=await u.get("queue",[]);if(a=a||await u.get("buildings",[]),"init"==e){let e=await u.get("next",Date.now()),t=new Date(e).toString();return i({type:"init",buildings:a,queue:n(),next:t})}if("force"==e)await u.set("next",0);else{if("add"==e.type)return t.push({unit:e.unit,screen:e.screen}),await u.set("queue",t),i({type:"queue",queue:n()});if("swap"==e.type){let a=e.index+("up"==e.dir?-1:1),s=t[a];return t[a]=t[e.index],t[e.index]=s,await u.set("queue",t),0!==e.index&&0!==a||await u.set("force",!0),i({type:"queue",queue:n()})}if("remove"==e.type)return t.splice(e.index,1),await u.set("queue",t),i({type:"queue",queue:n()});if("max-diff"==e.type)return e.value?(await u.set("max-diff",1e3*Number(e.value)),i({type:"success",message:"set max-diff to: "+e.value+"s"})):(await u.set("max-diff",0),i({type:"success",message:"removed max-diff"}))}function n(){return t.map(e=>{let t={},i=(a||[]).find(t=>t.key==e.unit)||{img:"",name:"NOT FOUND",max:!0};return t.name=i.name,t.img=i.img,t.max=i.max,t})}})},
client: function(t,e,n){let d=e=>t.document.querySelector(e),i=e=>[...t.document.querySelectorAll(e)];return d("#force").addEventListener("click",function(){return n("force")}),d("#set-max-diff").addEventListener("click",function(){return n({type:"max-diff",value:d("#max-diff").value})}),e(t=>{t.queue&&function(t){let e="";t.forEach((n,d)=>{e+=`\n                    <tr>\n                        <td><table>\n                            <tr><td>${0!==d?`<i class="fa fa-arrow-up arrow" data-dir="up" data-index="${d}"></i>`:""}</td></tr>\n                            <tr><td>${d<t.length-1?`<i class="fa fa-arrow-down arrow" data-dir="down" data-index="${d}"></i>`:""}</td></tr>\n                        </table></td>\n                        <td>\n                            <img src="${n.img}">\n                        </td>\n                        <td>${n.name}</td>\n                        <td><i class="fa fa-times remove" data-index="${d}"></i></td>\n                    </tr>\n                `}),d("#queue").innerHTML=e,i("#queue .arrow").forEach(t=>{t.addEventListener("click",function(){n({type:"swap",index:Number(t.getAttribute("data-index")),dir:t.getAttribute("data-dir")})})}),i("#queue .remove").forEach(t=>{t.addEventListener("click",function(){n({type:"remove",index:Number(t.getAttribute("data-index"))})})})}(t.queue),t.buildings&&function(t){let e="";for(let n of t)e+=`\n                    <tr>\n                        <td>\n                            <img src="${n.img}">\n                        </td>\n                        <td>${n.name}</td>\n                        <td>${n.level}</td>\n                        <td><button class="addbtn" data-unit="${n.key}" ${n.max?"disabled":""}>Add</button></td>\n                    </tr>\n                `;d("#buildings").innerHTML=e,i("#buildings .addbtn").forEach(t=>{t.addEventListener("click",()=>{n({type:"add",unit:t.getAttribute("data-unit"),screen:"main"})})})}(t.buildings),t.next&&(d("#next").innerHTML=t.next),"success"==t.type&&(d("#success").innerHTML=t.message)}),n("init")}
},
    widget: '@wdStr',
    run: function(e,t,i){return new Promise(async a=>{let n=await t.get("next",0),r=await t.get("queue",[]),l=i.build.build;if(r.length&&Date.now()>n){let a=r[0];if(await e.gotoScreen(a.screen),a.screen="main"){let e=await l(a.unit);if(e.success)r=r.slice(1);else if("queue"==e.error){let e=i["building-queue"];if(e.success&&0!=e.queue.length){let i=e.queue[0].duration.match(/^([0-9]{1,2}):([0-9]{2,2}):([0-9]{2,2})$/);if(i){let e=36e5*Number(i[1])+6e4*Number(i[2])+6e4;t.set("next",Date.now()+e)}}}else if("res"==e.error){let i=e.message.match(/(([0-9]):)?([0-9]{1,2}):([0-9]{2,2})$/);if(i&&i[2]){let e=1e3*Number(i[4])+5e3;t.set("next",Date.now()+e)}else if(i){let e=new Date;e.setHours(Number(i[3])),e.setMinutes(Number(i[4])+1),e.getTime()<Date.now()?await t.set("next",e.getTime()+864e5):await t.set("next",e.getTime())}}else"farm"==e.error&&await t.set("next",Date.now()+3e5)}}await t.set("queue",r);let s=await t.get("next",0),u=await t.get("max-diff",0);u&&s>Date.now()+u&&(await t.set("next",Date.now()+u),s=Date.now()+u,await e.browser.reload());let o,w=await t.get("buildings",[]);if(0!==r.length){o=`<div>next check: <b>${s?new Date(s).toLocaleString():"immediately"}</b></div><br><table><tr><th>Bild</th><th>Name</th></tr>`;for(let e of r){let t=w.find(t=>t.key==e.unit)||{};o+=`<tr><td style="border-top: 1px solid black"><img src="${t.img}"></td><td style="border-top: 1px solid black">${t.name}</td></tr>`}o+="</table>"}else o="nothing in queue";return a({queue:r,wdStr:o})})}
};
module.exports = plugin;
